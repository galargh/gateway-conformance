name: Test

on:
  workflow_dispatch:
  push:

jobs:
  test:
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.1
      - uses: actions/checkout@v3
        with:
          path: 'gateway-conformance'
      - name: Extract fixtures
        uses: ./gateway-conformance/.github/actions/extract-fixtures
        with:
          output: fixtures
      - uses: ipfs/download-ipfs-distribution-action@v1
      - name: Configure Kubo Gateway
        run: |
          ipfs init;
          ./gateway-conformance/kubo-config.example.sh;
          IPFS_NS_MAP=$(cat ./fixtures/dnslinks.json | jq -r 'to_entries | map("\(.key).example.com:\(.value)") | join(",")')
          echo "IPFS_NS_MAP=${IPFS_NS_MAP}" >> $GITHUB_ENV
        # note: the IPFS_NS_MAP set above will be passed the daemon:
      - uses: ipfs/start-ipfs-daemon-action@v1
      - name: Provision Kubo Gateway
        run: |
          find ./fixtures -name '*.car' -exec ipfs dag import {} \;
          find ./fixtures -name '*.ipns-record' -exec sh -c 'ipfs routing put --allow-offline /ipns/$(basename -s .ipns-record "{}") "{}"' \;
      - name: Run the tests
        uses: ./gateway-conformance/.github/actions/test
        with:
          gateway-url: http://127.0.0.1:8080
          subdomain-url: http://example.com
          json: output.json
          xml: output.xml
          html: output.html
          markdown: output.md
          args: -skip 'TestGatewayCar/GET_response_for_application/vnd.ipld.car/Header_Content-Length'
      - name: Set summary
        if: (failure() || success())
        run: cat ./output.md >> $GITHUB_STEP_SUMMARY
      - name: Upload one-page HTML report
        if: (failure() || success())
        uses: actions/upload-artifact@v3
        with:
          name: conformance.html
          path: ./output.html
